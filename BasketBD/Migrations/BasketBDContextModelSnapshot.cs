// <auto-generated />
using BasketBD.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BasketBD.Migrations
{
    [DbContext(typeof(BasketBDContext))]
    partial class BasketBDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BasketBD.Models.Data.Brand", b =>
                {
                    b.Property<string>("BrandId")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("BrandId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("BasketBD.Models.Data.Category", b =>
                {
                    b.Property<string>("CategoryName")
                        .HasMaxLength(100);

                    b.Property<string>("SubCategory")
                        .HasMaxLength(100);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<int?>("SerialNo");

                    b.HasKey("CategoryName", "SubCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BasketBD.Models.Data.ItemPicture", b =>
                {
                    b.Property<string>("SlNo")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100);

                    b.Property<string>("PicturePath");

                    b.HasKey("SlNo", "ItemCode");

                    b.ToTable("ItemPicture");
                });

            modelBuilder.Entity("BasketBD.Models.Data.Items", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(100);

                    b.Property<string>("BrandId")
                        .HasMaxLength(100);

                    b.Property<string>("Category")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("EexpireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100);

                    b.Property<string>("NewArrivalTitle");

                    b.Property<string>("Picture");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("money");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("money");

                    b.Property<string>("SlideTitle");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(100);

                    b.HasKey("ItemCode");

                    b.HasIndex("BrandId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("Category", "SubCategory");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BasketBD.Models.Data.NewArrival", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("PicturePath");

                    b.Property<string>("Title")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("NewArrival");
                });

            modelBuilder.Entity("BasketBD.Models.Data.SlidePictures", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("PicturePath");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(500);

                    b.Property<string>("Title")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("SlidePictures");
                });

            modelBuilder.Entity("BasketBD.Models.Data.Supplier", b =>
                {
                    b.Property<string>("SupplierId")
                        .HasMaxLength(100);

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<int?>("Mobile");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("BasketBD.Models.Data.Items", b =>
                {
                    b.HasOne("BasketBD.Models.Data.Brand", "Brand")
                        .WithMany("Items")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__Items__BrandId__2D27B809");

                    b.HasOne("BasketBD.Models.Data.Supplier", "Supplier")
                        .WithMany("Items")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__Items__SupplierI__2C3393D0");

                    b.HasOne("BasketBD.Models.Data.Category", "CategoryNavigation")
                        .WithMany("Items")
                        .HasForeignKey("Category", "SubCategory")
                        .HasConstraintName("FK__Items__2E1BDC42");
                });
#pragma warning restore 612, 618
        }
    }
}
